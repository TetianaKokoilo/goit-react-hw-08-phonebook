{"version":3,"file":"static/js/194.192b1c60.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.jsx","components/RegisterForm/RegisterForm.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { Box, Button, Grid, TextField, Typography } from '@mui/material';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logIn } from 'redux/auth/operations';\n\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"new-password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </Grid>\n      </Grid>\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Log in\n      </Button>\n      <Typography\n        variant=\"body2\"\n        color=\"text.secondary\"\n        align=\"center\"\n      >\n        {'Copyright Â© '}\n        <Link color=\"inherit\" href=\"#\">\n          Tetiana Kokoilo\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    </Box>\n  );\n};\n","import { Box, Button, Grid, TextField, Typography } from '@mui/material';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { register } from 'redux/auth/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete=\"given-name\"\n            name=\"name\"\n            required\n            fullWidth\n            id=\"firstName\"\n            label=\"Username\"\n            autoFocus\n            type=\"text\"\n            value={name}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"new-password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </Grid>\n      </Grid>\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Sign Up\n      </Button>\n      <Typography\n        variant=\"body2\"\n        color=\"text.secondary\"\n        align=\"center\"\n      >\n        {'Copyright Â© '}\n        <Link color=\"inherit\" href=\"#\">\n          Tetiana Kokoilo\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    </Box>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filters.value;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectError, selectContacts } from '../../redux/contacts/selectors';\nimport { toast } from 'react-hot-toast';\nimport { Box, Button, Grid, TextField } from '@mui/material';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const [newContact, setNewContact] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setNewContact({\n      name: '',\n      number: '',\n    });\n    const isRepeat = contacts.some(\n      contact => contact.name.toLowerCase() === setNewContact.name.toLowerCase()\n    );\n    if (isRepeat) {\n      return;\n    } else {\n      dispatch(addContact(newContact));\n    }\n    if (error) {\n      toast.error(error.message);\n    }\n  };\n\n  return (\n    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete=\"given-name\"\n            type=\"text\"\n            name=\"name\"\n            required\n            fullWidth\n            id=\"firstName\"\n            label=\"Name\"\n            autoFocus\n            pattern=\"^[a-zA-ZÐ°-ÑÐ-Ð¯]+(([' -][a-zA-ZÐ°-ÑÐ-Ð¯ ])?[a-zA-ZÐ°-ÑÐ-Ð¯]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={newContact.name}\n            onChange={event =>\n              setNewContact({ ...newContact, name: event.target.value })\n            }\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            autoComplete=\"given-name\"\n            name=\"number\"\n            required\n            fullWidth\n            id=\"Number\"\n            label=\"Number\"\n            autoFocus\n            type=\"tel\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={newContact.number}\n            onChange={event =>\n              setNewContact({ ...newContact, number: event.target.value })\n            }\n          />\n        </Grid>\n      </Grid>\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Add Contacts\n      </Button>\n    </Box>\n  );\n};\n","\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from '../../redux/contacts/selectors';\nimport { Button, List, ListItem, ListItemText, Stack } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  return (\n    <List\n      sx={{\n        width: '100%',\n        maxWidth: 360,\n        bgcolor: 'background.paper',\n        justifyContent: 'center',\n      }}\n    >\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <ListItemText primary={name} secondary={number} />\n          <Stack direction=\"row\" spacing={2}>\n            <Button\n              variant=\"outlined\"\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n              startIcon={<DeleteIcon />}\n            >\n              Delete\n            </Button>\n          </Stack>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","// import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { Box, TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        id=\"standard-basic\"\n        label=\"Find contacts by named\"\n        variant=\"standard\"\n        type=\"text\"\n        onChange={event => dispatch(setFilter(event.target.value))}\n      />\n    </Box>\n  );\n};\n\n// Filter.propTypes = {\n//   filter: PropTypes.func,\n// }\n","import { Box, Container, ThemeProvider, createTheme } from '@mui/material';\nimport { ContactForm, ContactList, Filter } from 'components';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\n\nconst Contacts = () => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const theme = createTheme();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <h2>Contacts</h2>\n          <ContactForm />\n          <Filter />\n          <ContactList />\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Contacts;\n"],"names":["LoginForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","component","noValidate","onSubmit","e","preventDefault","logIn","sx","mt","container","spacing","item","xs","required","fullWidth","id","label","type","autoComplete","onChange","variant","mb","color","align","href","Date","getFullYear","RegisterForm","setName","register","autoFocus","selectContacts","state","contacts","items","selectError","error","selectFilteredContacts","createSelector","filters","filter","contact","toLowerCase","includes","ContactForm","useSelector","number","newContact","setNewContact","Box","some","addContact","toast","message","Grid","TextField","pattern","title","event","Button","ContactList","List","width","maxWidth","bgcolor","justifyContent","map","ListItem","ListItemText","primary","secondary","Stack","direction","onClick","deleteContact","startIcon","Delete","Filter","m","setFilter","useEffect","fetchContacts","theme","createTheme","ThemeProvider","Container","marginTop","display","flexDirection","alignItems"],"sourceRoot":""}